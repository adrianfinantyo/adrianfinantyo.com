{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, defineNestedType, makeSource } from \"contentlayer/source-files\";\nimport readingTime from \"reading-time\";\nimport rehypeRaw from \"rehype-raw\";\nimport remarkHtml from \"remark-html\";\n\nconst ReadTime = defineNestedType(() => ({\n  name: \"ReadTime\",\n  fields: {\n    text: { type: \"string\", required: true },\n    minutes: { type: \"number\", required: true },\n    time: { type: \"number\", required: true },\n    words: { type: \"number\", required: true },\n  },\n}));\n\nconst Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: \"posts/*.md\",\n  fields: {\n    title: { type: \"string\", required: true },\n    date: { type: \"string\", required: true },\n    cover: { type: \"string\", required: true },\n    description: { type: \"string\" },\n    published: { type: \"boolean\", required: true },\n    tags: { type: \"list\", of: { type: \"string\" } },\n    readTime: {\n      type: \"nested\",\n      of: ReadTime,\n    },\n  },\n  computedFields: {\n    readTime: {\n      type: \"nested\",\n      of: ReadTime,\n      resolve: (post) => readingTime(post.body.raw),\n    },\n    id: {\n      type: \"string\",\n      // eslint-disable-next-line no-underscore-dangle\n      resolve: (post) => post._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, \"\"),\n    },\n    slug: {\n      type: \"string\",\n      resolve: (post) => post.title.toLowerCase().replace(/ /g, \"-\"),\n    },\n  },\n}));\n\nconst Project = defineDocumentType(() => ({\n  name: \"Project\",\n  filePathPattern: \"projects/*.md\",\n  fields: {\n    title: { type: \"string\", required: true },\n    name: { type: \"string\", required: true },\n    date: { type: \"string\", required: true },\n    feautured: { type: \"boolean\", required: true },\n    cover: { type: \"string\", required: true },\n    logo: { type: \"string\", required: true },\n    published: { type: \"boolean\", required: true },\n    stack: { type: \"list\", of: { type: \"string\" }, required: true },\n    projectLink: { type: \"string\" },\n    githubLink: { type: \"string\" },\n    description: { type: \"string\" },\n  },\n  computedFields: {\n    id: {\n      type: \"string\",\n      // eslint-disable-next-line no-underscore-dangle\n      resolve: (post) => post._raw.sourceFileName.replace(/\\.md$|\\.mdx$/, \"\"),\n    },\n    slug: {\n      type: \"string\",\n      resolve: (post) => post.name.toLowerCase().replace(/ /g, \"-\"),\n    },\n  },\n}));\n\nconst contentLayerConfig = makeSource({\n  contentDirPath: \"content\",\n  documentTypes: [Post, Project],\n  markdown: {\n    remarkPlugins: [remarkHtml],\n    rehypePlugins: [rehypeRaw],\n  },\n});\n\nexport default contentLayerConfig;\n"],
  "mappings": "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",
  "names": []
}
